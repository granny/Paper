From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/server/gui/StatsComponent.java b/net/minecraft/server/gui/StatsComponent.java
index c8eb71c4f5419b73304ec5384ab6a42cd5ba5fb8..35fd539eb2bfe60ad17ab1e558a01273666acc54 100644
--- a/net/minecraft/server/gui/StatsComponent.java
+++ b/net/minecraft/server/gui/StatsComponent.java
@@ -34,8 +34,17 @@ public class StatsComponent extends JComponent {
 
     private void tick() {
         long l = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
+        // Paper start - Improve ServerGUI
+        double[] tps = org.bukkit.Bukkit.getTPS();
+        String[] tpsAvg = new String[tps.length];
+
+        for (int g = 0; g < tps.length; g++) {
+            tpsAvg[g] = format(tps[g]);
+        }
         this.msgs[0] = "Memory use: " + l / 1024L / 1024L + " mb (" + Runtime.getRuntime().freeMemory() * 100L / Runtime.getRuntime().maxMemory() + "% free)";
         this.msgs[1] = "Avg tick: " + DECIMAL_FORMAT.format((double)this.server.getAverageTickTimeNanos() / TimeUtil.NANOSECONDS_PER_MILLISECOND) + " ms";
+        this.msgs[2] = "TPS from last 1m, 5m, 15m: " + String.join(", ", tpsAvg);
+        // Paper end - Improve ServerGUI
         this.values[this.vp++ & 0xFF] = (int)(l * 100L / Runtime.getRuntime().maxMemory());
         this.repaint();
     }
@@ -64,4 +73,10 @@ public class StatsComponent extends JComponent {
     public void close() {
         this.timer.stop();
     }
+
+    // Paper start - Improve ServerGUI
+    private static String format(double tps) {
+        return (( tps > 21.0 ) ? "*" : "") + Math.min(Math.round(tps * 100.0) / 100.0, 20.0); // only print * at 21, we commonly peak to 20.02 as the tick sleep is not accurate enough, stop the noise
+    }
+    // Paper end - Improve ServerGUI
 }
