From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/server/ServerTickRateManager.java b/net/minecraft/server/ServerTickRateManager.java
index 45c37663c2c23b960b00e5c7fa729a1e4ab39e1d..40338efd1c0e56d869d03f1d0687e7ff0fcbf11a 100644
--- a/net/minecraft/server/ServerTickRateManager.java
+++ b/net/minecraft/server/ServerTickRateManager.java
@@ -14,6 +14,7 @@ public class ServerTickRateManager extends TickRateManager {
     private long scheduledCurrentSprintTicks = 0L;
     private boolean previousIsFrozen = false;
     private final MinecraftServer server;
+    private boolean silent; // Paper - silence feedback when API requests sprint
 
     public ServerTickRateManager(MinecraftServer server) {
         this.server = server;
@@ -67,6 +68,13 @@ public class ServerTickRateManager extends TickRateManager {
     }
 
     public boolean requestGameToSprint(int sprintTime) {
+        // Paper start - silence feedback when API requests sprint
+        return requestGameToSprint(sprintTime, false);
+    }
+
+    public boolean requestGameToSprint(int sprintTime, boolean silent) {
+        if (!isSprinting()) this.silent = silent;
+        // Paper end - silence feedback when API requests sprint
         boolean flag = this.remainingSprintTicks > 0L;
         this.sprintTimeSpend = 0L;
         this.scheduledCurrentSprintTicks = sprintTime;
@@ -83,7 +91,10 @@ public class ServerTickRateManager extends TickRateManager {
         String string = String.format("%.2f", l == 0L ? this.millisecondsPerTick() : d / l);
         this.scheduledCurrentSprintTicks = 0L;
         this.sprintTimeSpend = 0L;
-        this.server.createCommandSourceStack().sendSuccess(() -> Component.translatable("commands.tick.sprint.report", i, string), true);
+        // Paper start - silence feedback when API requests sprint
+        if (!this.silent) this.server.createCommandSourceStack().sendSuccess(() -> Component.translatable("commands.tick.sprint.report", i, string), true);
+        this.silent = false;
+        // Paper end - silence feedback when API requests sprint
         this.remainingSprintTicks = 0L;
         this.setFrozen(this.previousIsFrozen);
         this.server.onTickRateChanged();
