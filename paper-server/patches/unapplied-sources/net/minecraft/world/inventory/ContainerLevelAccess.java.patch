From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/inventory/ContainerLevelAccess.java b/net/minecraft/world/inventory/ContainerLevelAccess.java
index 5ef8bf9641186819e2f2fea031dac6ff892245d7..f0ebb9a37be78f41cb334fa5168b7b7175fa154d 100644
--- a/net/minecraft/world/inventory/ContainerLevelAccess.java
+++ b/net/minecraft/world/inventory/ContainerLevelAccess.java
@@ -12,6 +12,12 @@ public interface ContainerLevelAccess {
         public <T> Optional<T> evaluate(BiFunction<Level, BlockPos, T> levelPosConsumer) {
             return Optional.empty();
         }
+        // Paper start - fix menus with empty level accesses
+        @Override
+        public org.bukkit.Location getLocation() {
+            return null;
+        }
+        // Paper end - fix menus with empty level accesses
     };
 
     static ContainerLevelAccess create(final Level level, final BlockPos pos) {
@@ -20,6 +26,23 @@ public interface ContainerLevelAccess {
             public <T> Optional<T> evaluate(BiFunction<Level, BlockPos, T> levelPosConsumer) {
                 return Optional.of(levelPosConsumer.apply(level, pos));
             }
+            // CraftBukkit start
+            @Override
+            public Level getWorld() {
+                return level;
+            }
+
+            @Override
+            public BlockPos getPosition() {
+                return pos;
+            }
+            // CraftBukkit end
+            // Paper start - Add missing InventoryHolders
+            @Override
+            public boolean isBlock() {
+                return true;
+            }
+            // Paper end - Add missing InventoryHolders
         };
     }
 
@@ -35,4 +58,29 @@ public interface ContainerLevelAccess {
             return Optional.empty();
         });
     }
+    // CraftBukkit start
+    default Level getWorld() {
+        throw new UnsupportedOperationException("Not supported yet.");
+    }
+
+    default BlockPos getPosition() {
+        throw new UnsupportedOperationException("Not supported yet.");
+    }
+
+    default org.bukkit.Location getLocation() {
+        return org.bukkit.craftbukkit.util.CraftLocation.toBukkit(this.getPosition(), this.getWorld());
+    }
+    // CraftBukkit end
+    // Paper start - Add missing InventoryHolders
+    default boolean isBlock() {
+        return false;
+    }
+
+    default org.bukkit.inventory.@org.jetbrains.annotations.Nullable BlockInventoryHolder createBlockHolder(AbstractContainerMenu menu) {
+        if (!this.isBlock()) {
+            return null;
+        }
+        return new org.bukkit.craftbukkit.inventory.CraftBlockInventoryHolder(this, menu.getBukkitView().getTopInventory());
+    }
+    // Paper end - Add missing InventoryHolders
 }
