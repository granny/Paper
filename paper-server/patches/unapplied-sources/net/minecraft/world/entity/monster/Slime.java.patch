From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/monster/Slime.java b/net/minecraft/world/entity/monster/Slime.java
index 8e3ffc4ffd90ee12b96d0666c3363164d93c57c2..6a8a5a76400beeaf69a17d53105a7a522ec5791e 100644
--- a/net/minecraft/world/entity/monster/Slime.java
+++ b/net/minecraft/world/entity/monster/Slime.java
@@ -57,6 +57,7 @@ public class Slime extends Mob implements Enemy {
     public float squish;
     public float oSquish;
     private boolean wasOnGround = false;
+    private boolean canWander = true; // Paper - Slime pathfinder events
 
     public Slime(EntityType<? extends Slime> entityType, Level level) {
         super(entityType, level);
@@ -111,6 +112,7 @@ public class Slime extends Mob implements Enemy {
         super.addAdditionalSaveData(compound);
         compound.putInt("Size", this.getSize() - 1);
         compound.putBoolean("wasOnGround", this.wasOnGround);
+        compound.putBoolean("Paper.canWander", this.canWander); // Paper
     }
 
     @Override
@@ -118,6 +120,7 @@ public class Slime extends Mob implements Enemy {
         this.setSize(compound.getIntOr("Size", 0) + 1, false);
         super.readAdditionalSaveData(compound);
         this.wasOnGround = compound.getBooleanOr("wasOnGround", false);
+        this.canWander = compound.getBooleanOr("Paper.canWander", true); // Paper
     }
 
     public boolean isTiny() {
@@ -197,7 +200,7 @@ public class Slime extends Mob implements Enemy {
     }
 
     @Override
-    public void remove(Entity.RemovalReason reason) {
+    public void remove(Entity.RemovalReason reason, @Nullable org.bukkit.event.entity.EntityRemoveEvent.Cause eventCause) { // CraftBukkit - add Bukkit remove cause
         int size = this.getSize();
         if (!this.level().isClientSide && size > 1 && this.isDeadOrDying()) {
             float width = this.getDimensions(this.getPose()).width();
@@ -205,18 +208,43 @@ public class Slime extends Mob implements Enemy {
             int i = size / 2;
             int i1 = 2 + this.random.nextInt(3);
             PlayerTeam team = this.getTeam();
+            // CraftBukkit start
+            org.bukkit.event.entity.SlimeSplitEvent event = new org.bukkit.event.entity.SlimeSplitEvent((org.bukkit.entity.Slime) this.getBukkitEntity(), i1);
+            if (event.callEvent() && event.getCount() > 0) {
+                i1 = event.getCount();
+            } else {
+                super.remove(reason, eventCause); // CraftBukkit - add Bukkit remove cause
+                return;
+            }
+
+            java.util.List<LivingEntity> slimes = new java.util.ArrayList<>(i1);
+            // CraftBukkit end
 
             for (int i2 = 0; i2 < i1; i2++) {
                 float f1 = (i2 % 2 - 0.5F) * f;
                 float f2 = (i2 / 2 - 0.5F) * f;
-                this.convertTo(this.getType(), new ConversionParams(ConversionType.SPLIT_ON_DEATH, false, false, team), EntitySpawnReason.TRIGGERED, mob -> {
+                Slime converted = this.convertTo(this.getType(), new ConversionParams(ConversionType.SPLIT_ON_DEATH, false, false, team), EntitySpawnReason.TRIGGERED, (mob) -> { // CraftBukkit
                     mob.setSize(i, true);
                     mob.snapTo(this.getX() + f1, this.getY() + 0.5, this.getZ() + f2, this.random.nextFloat() * 360.0F, 0.0F);
-                });
+                // CraftBukkit start
+                }, null, null);
+                if (converted != null) {
+                    slimes.add(converted);
+                }
+                // CraftBukkit end
+            }
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTransformEvent(this, slimes, org.bukkit.event.entity.EntityTransformEvent.TransformReason.SPLIT).isCancelled()) {
+                super.remove(reason, eventCause); // add Bukkit remove cause
+                return;
+            }
+            for (LivingEntity living : slimes) {
+                this.level().addFreshEntity(living, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SLIME_SPLIT);
             }
+            // CraftBukkit end
         }
 
-        super.remove(reason);
+        super.remove(reason, eventCause); // CraftBukkit - add Bukkit remove cause
     }
 
     @Override
@@ -282,9 +310,13 @@ public class Slime extends Mob implements Enemy {
                 return checkMobSpawnRules(entityType, level, spawnReason, pos, random);
             }
 
+            // Paper start - Replace rules for Height in Swamp Biomes
+            final double maxHeightSwamp = level.getMinecraftWorld().paperConfig().entities.spawning.slimeSpawnHeight.surfaceBiome.maximum;
+            final double minHeightSwamp = level.getMinecraftWorld().paperConfig().entities.spawning.slimeSpawnHeight.surfaceBiome.minimum;
+            // Paper end - Replace rules for Height in Swamp Biomes
             if (level.getBiome(pos).is(BiomeTags.ALLOWS_SURFACE_SLIME_SPAWNS)
-                && pos.getY() > 50
-                && pos.getY() < 70
+                && pos.getY() > minHeightSwamp // Paper - Replace rules for Height in Swamp Biomes
+                && pos.getY() < maxHeightSwamp // Paper - Replace rules for Height in Swamp Biomes
                 && random.nextFloat() < 0.5F
                 && random.nextFloat() < level.getMoonBrightness()
                 && level.getMaxLocalRawBrightness(pos) <= random.nextInt(8)) {
@@ -296,8 +328,11 @@ public class Slime extends Mob implements Enemy {
             }
 
             ChunkPos chunkPos = new ChunkPos(pos);
-            boolean flag = WorldgenRandom.seedSlimeChunk(chunkPos.x, chunkPos.z, ((WorldGenLevel)level).getSeed(), 987234911L).nextInt(10) == 0;
-            if (random.nextInt(10) == 0 && flag && pos.getY() < 40) {
+            boolean flag = level.getMinecraftWorld().paperConfig().entities.spawning.allChunksAreSlimeChunks || WorldgenRandom.seedSlimeChunk(chunkPos.x, chunkPos.z, ((WorldGenLevel) level).getSeed(), level.getMinecraftWorld().spigotConfig.slimeSeed).nextInt(10) == 0; // Paper
+                // Paper start - Replace rules for Height in Slime Chunks
+                final double maxHeightSlimeChunk = level.getMinecraftWorld().paperConfig().entities.spawning.slimeSpawnHeight.slimeChunk.maximum;
+                if (random.nextInt(10) == 0 && flag && pos.getY() < maxHeightSlimeChunk) {
+                // Paper end - Replace rules for Height in Slime Chunks
                 return checkMobSpawnRules(entityType, level, spawnReason, pos, random);
             }
         }
@@ -356,6 +391,16 @@ public class Slime extends Mob implements Enemy {
         return super.getDefaultDimensions(pose).scale(this.getSize());
     }
 
+    // Paper start - Slime pathfinder events
+    public boolean canWander() {
+        return this.canWander;
+    }
+
+    public void setWander(boolean canWander) {
+        this.canWander = canWander;
+    }
+    // Paper end - Slime pathfinder events
+
     static class SlimeAttackGoal extends Goal {
         private final Slime slime;
         private int growTiredTimer;
@@ -368,7 +413,16 @@ public class Slime extends Mob implements Enemy {
         @Override
         public boolean canUse() {
             LivingEntity target = this.slime.getTarget();
-            return target != null && this.slime.canAttack(target) && this.slime.getMoveControl() instanceof Slime.SlimeMoveControl;
+
+            // Paper start - Slime pathfinder events
+            if (target == null || !target.isAlive()) {
+                return false;
+            }
+            if (!this.slime.canAttack(target)) {
+                return false;
+            }
+            return this.slime.getMoveControl() instanceof Slime.SlimeMoveControl && this.slime.canWander && new com.destroystokyo.paper.event.entity.SlimeTargetLivingEntityEvent((org.bukkit.entity.Slime) this.slime.getBukkitEntity(), (org.bukkit.entity.LivingEntity) target.getBukkitEntity()).callEvent();
+            // Paper end - Slime pathfinder events
         }
 
         @Override
@@ -380,7 +434,16 @@ public class Slime extends Mob implements Enemy {
         @Override
         public boolean canContinueToUse() {
             LivingEntity target = this.slime.getTarget();
-            return target != null && this.slime.canAttack(target) && --this.growTiredTimer > 0;
+
+            // Paper start - Slime pathfinder events
+            if (target == null || !target.isAlive()) {
+                return false;
+            }
+            if (!this.slime.canAttack(target)) {
+                return false;
+            }
+            return --this.growTiredTimer > 0 && this.slime.canWander && new com.destroystokyo.paper.event.entity.SlimeTargetLivingEntityEvent((org.bukkit.entity.Slime) this.slime.getBukkitEntity(), (org.bukkit.entity.LivingEntity) target.getBukkitEntity()).callEvent();
+            // Paper end - Slime pathfinder events
         }
 
         @Override
@@ -399,6 +462,13 @@ public class Slime extends Mob implements Enemy {
                 slimeMoveControl.setDirection(this.slime.getYRot(), this.slime.isDealsDamage());
             }
         }
+
+        // Paper start - Slime pathfinder events; clear timer and target when goal resets
+        public void stop() {
+            this.growTiredTimer = 0;
+            this.slime.setTarget(null);
+        }
+        // Paper end - Slime pathfinder events
     }
 
     static class SlimeFloatGoal extends Goal {
@@ -412,7 +482,7 @@ public class Slime extends Mob implements Enemy {
 
         @Override
         public boolean canUse() {
-            return (this.slime.isInWater() || this.slime.isInLava()) && this.slime.getMoveControl() instanceof Slime.SlimeMoveControl;
+            return (this.slime.isInWater() || this.slime.isInLava()) && this.slime.getMoveControl() instanceof Slime.SlimeMoveControl && this.slime.canWander && new com.destroystokyo.paper.event.entity.SlimeSwimEvent((org.bukkit.entity.Slime) this.slime.getBukkitEntity()).callEvent(); // Paper - Slime pathfinder events
         }
 
         @Override
@@ -442,7 +512,7 @@ public class Slime extends Mob implements Enemy {
 
         @Override
         public boolean canUse() {
-            return !this.slime.isPassenger();
+            return !this.slime.isPassenger() && this.slime.canWander && new com.destroystokyo.paper.event.entity.SlimeWanderEvent((org.bukkit.entity.Slime) this.slime.getBukkitEntity()).callEvent(); // Paper - Slime pathfinder events
         }
 
         @Override
@@ -520,7 +590,7 @@ public class Slime extends Mob implements Enemy {
 
         @Override
         public boolean canUse() {
-            return this.slime.getTarget() == null
+            return this.slime.getTarget() == null && this.slime.canWander // Paper - Slime pathfinder events
                 && (this.slime.onGround() || this.slime.isInWater() || this.slime.isInLava() || this.slime.hasEffect(MobEffects.LEVITATION))
                 && this.slime.getMoveControl() instanceof Slime.SlimeMoveControl;
         }
@@ -530,6 +600,11 @@ public class Slime extends Mob implements Enemy {
             if (--this.nextRandomizeTime <= 0) {
                 this.nextRandomizeTime = this.adjustedTickDelay(40 + this.slime.getRandom().nextInt(60));
                 this.chosenDegrees = this.slime.getRandom().nextInt(360);
+                // Paper start - Slime pathfinder events
+                com.destroystokyo.paper.event.entity.SlimeChangeDirectionEvent event = new com.destroystokyo.paper.event.entity.SlimeChangeDirectionEvent((org.bukkit.entity.Slime) this.slime.getBukkitEntity(), this.chosenDegrees);
+                if (!this.slime.canWander || !event.callEvent()) return;
+                this.chosenDegrees = event.getNewYaw();
+                // Paper end - Slime pathfinder events
             }
 
             if (this.slime.getMoveControl() instanceof Slime.SlimeMoveControl slimeMoveControl) {
