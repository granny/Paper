From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/animal/wolf/Wolf.java b/net/minecraft/world/entity/animal/wolf/Wolf.java
index 6b00988dafe9e2ac32e543623a4a1942a0c78a76..d926ecd041ca2a421057bc22efe66a8b811ee649 100644
--- a/net/minecraft/world/entity/animal/wolf/Wolf.java
+++ b/net/minecraft/world/entity/animal/wolf/Wolf.java
@@ -400,16 +400,18 @@ public class Wolf extends TamableAnimal implements NeutralMob {
         if (this.isInvulnerableTo(level, damageSource)) {
             return false;
         } else {
+            if (!super.hurtServer(level, damageSource, amount)) return false; // CraftBukkit
             this.setOrderedToSit(false);
-            return super.hurtServer(level, damageSource, amount);
+            return true; // CraftBukkit
         }
     }
 
     @Override
-    protected void actuallyHurt(ServerLevel level, DamageSource damageSource, float amount) {
+    public boolean actuallyHurt(ServerLevel level, DamageSource damageSource, float amount, org.bukkit.event.entity.EntityDamageEvent event) { // CraftBukkit - void -> boolean
         if (!this.canArmorAbsorb(damageSource)) {
-            super.actuallyHurt(level, damageSource, amount);
+            return super.actuallyHurt(level, damageSource, amount, event); // CraftBukkit
         } else {
+            if (event.isCancelled()) return false; // CraftBukkit - SPIGOT-7815: if the damage was cancelled, no need to run the wolf armor behaviour
             ItemStack bodyArmorItem = this.getBodyArmorItem();
             int damageValue = bodyArmorItem.getDamageValue();
             int maxDamage = bodyArmorItem.getMaxDamage();
@@ -429,6 +431,7 @@ public class Wolf extends TamableAnimal implements NeutralMob {
                 );
             }
         }
+        return true; // CraftBukkit // Paper - return false ONLY if event was cancelled
     }
 
     private boolean canArmorAbsorb(DamageSource damageSource) {
@@ -439,7 +442,7 @@ public class Wolf extends TamableAnimal implements NeutralMob {
     protected void applyTamingSideEffects() {
         if (this.isTame()) {
             this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(40.0);
-            this.setHealth(40.0F);
+            this.setHealth(this.getMaxHealth()); // CraftBukkit - 40.0 -> getMaxHealth()
         } else {
             this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(8.0);
         }
@@ -459,7 +462,7 @@ public class Wolf extends TamableAnimal implements NeutralMob {
                 this.usePlayerItem(player, hand, itemInHand);
                 FoodProperties foodProperties = itemInHand.get(DataComponents.FOOD);
                 float f = foodProperties != null ? foodProperties.nutrition() : 1.0F;
-                this.heal(2.0F * f);
+                this.heal(2.0F * f, org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason.EATING); // CraftBukkit
                 return InteractionResult.SUCCESS;
             }
 
@@ -492,7 +495,7 @@ public class Wolf extends TamableAnimal implements NeutralMob {
                         this.setOrderedToSit(!this.isOrderedToSit());
                         this.jumping = false;
                         this.navigation.stop();
-                        this.setTarget(null);
+                        this.setTarget(null, org.bukkit.event.entity.EntityTargetEvent.TargetReason.FORGOT_TARGET); // CraftBukkit - reason
                         return InteractionResult.SUCCESS.withoutItem();
                     }
 
@@ -504,7 +507,9 @@ public class Wolf extends TamableAnimal implements NeutralMob {
                 ItemStack bodyArmorItem = this.getBodyArmorItem();
                 this.setBodyArmorItem(ItemStack.EMPTY);
                 if (this.level() instanceof ServerLevel serverLevel) {
+                    this.forceDrops = true; // CraftBukkit
                     this.spawnAtLocation(serverLevel, bodyArmorItem);
+                    this.forceDrops = false; // CraftBukkit
                 }
 
                 return InteractionResult.SUCCESS;
@@ -512,6 +517,13 @@ public class Wolf extends TamableAnimal implements NeutralMob {
 
             DyeColor dyeColor = dyeItem.getDyeColor();
             if (dyeColor != this.getCollarColor()) {
+                // Paper start - Add EntityDyeEvent and CollarColorable interface
+                final io.papermc.paper.event.entity.EntityDyeEvent event = new io.papermc.paper.event.entity.EntityDyeEvent(this.getBukkitEntity(), org.bukkit.DyeColor.getByWoolData((byte) dyeColor.getId()), (org.bukkit.entity.Player) player.getBukkitEntity());
+                if (!event.callEvent()) {
+                    return InteractionResult.FAIL;
+                }
+                dyeColor = DyeColor.byId(event.getColor().getWoolData());
+                // Paper end - Add EntityDyeEvent and CollarColorable interface
                 this.setCollarColor(dyeColor);
                 itemInHand.consume(1, player);
                 return InteractionResult.SUCCESS;
@@ -526,7 +538,7 @@ public class Wolf extends TamableAnimal implements NeutralMob {
     }
 
     private void tryToTame(Player player) {
-        if (this.random.nextInt(3) == 0) {
+        if (this.random.nextInt(3) == 0 && !org.bukkit.craftbukkit.event.CraftEventFactory.callEntityTameEvent(this, player).isCancelled()) { // CraftBukkit - added event call and isCancelled check.
             this.tame(player);
             this.navigation.stop();
             this.setTarget(null);
