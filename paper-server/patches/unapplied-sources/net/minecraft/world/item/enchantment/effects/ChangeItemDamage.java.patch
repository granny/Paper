From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/item/enchantment/effects/ChangeItemDamage.java b/net/minecraft/world/item/enchantment/effects/ChangeItemDamage.java
index 79e98aa5ed256e95ed26ffdc737e1ebe556059f9..d5103989dc81a845fb8f02b9d4a32e4c6adf7255 100644
--- a/net/minecraft/world/item/enchantment/effects/ChangeItemDamage.java
+++ b/net/minecraft/world/item/enchantment/effects/ChangeItemDamage.java
@@ -21,9 +21,9 @@ public record ChangeItemDamage(LevelBasedValue amount) implements EnchantmentEnt
     public void apply(ServerLevel level, int enchantmentLevel, EnchantedItemInUse item, Entity entity, Vec3 origin) {
         ItemStack itemStack = item.itemStack();
         if (itemStack.has(DataComponents.MAX_DAMAGE) && itemStack.has(DataComponents.DAMAGE)) {
-            ServerPlayer serverPlayer1 = item.owner() instanceof ServerPlayer serverPlayer ? serverPlayer : null;
+            //ServerPlayer serverPlayer1 = item.owner() instanceof ServerPlayer serverPlayer ? serverPlayer : null; // Paper - EntityDamageItemEvent - always pass in entity
             int i = (int)this.amount.calculate(enchantmentLevel);
-            itemStack.hurtAndBreak(i, level, serverPlayer1, item.onBreak());
+            itemStack.hurtAndBreak(i, level, item.owner(), item.onBreak()); // Paper - EntityDamageItemEvent - always pass in entity
         }
     }
 
