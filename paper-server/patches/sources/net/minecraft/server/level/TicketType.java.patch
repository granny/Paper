From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/server/level/TicketType.java b/net/minecraft/server/level/TicketType.java
index b21089eb72cba2f1ca6d71430b990374c3ad24cf..bab5ea53b70041eb413103a481deae0e770b5d8d 100644
--- a/net/minecraft/server/level/TicketType.java
+++ b/net/minecraft/server/level/TicketType.java
@@ -13,11 +13,24 @@ public record TicketType(long timeout, boolean persist, TicketType.TicketUse use
     public static final TicketType PORTAL = register("portal", 300L, true, TicketType.TicketUse.LOADING_AND_SIMULATION);
     public static final TicketType ENDER_PEARL = register("ender_pearl", 40L, false, TicketType.TicketUse.LOADING_AND_SIMULATION);
     public static final TicketType UNKNOWN = register("unknown", 1L, false, TicketType.TicketUse.LOADING);
+    public static final TicketType PLUGIN = register("plugin", 0L, false, TicketType.TicketUse.LOADING_AND_SIMULATION); // CraftBukkit
+    public static final TicketType POST_TELEPORT = register("post_teleport", 5L, false, TicketType.TicketUse.LOADING_AND_SIMULATION); // Paper
+    public static final TicketType PLUGIN_TICKET = register("plugin_ticket", TicketType.NO_TIMEOUT, false, TicketType.TicketUse.LOADING_AND_SIMULATION); // Paper
+    public static final TicketType FUTURE_AWAIT = register("future_await", TicketType.NO_TIMEOUT, false, TicketType.TicketUse.LOADING_AND_SIMULATION); // Paper
+    public static final TicketType CHUNK_LOAD = register("chunk_load", TicketType.NO_TIMEOUT, false, TicketType.TicketUse.LOADING); // Paper - moonrise
 
     public static TicketType register(String name, long timeout, boolean persist, TicketType.TicketUse use) {
         return Registry.register(BuiltInRegistries.TICKET_TYPE, name, new TicketType(timeout, persist, use));
     }
 
+    // Paper start - chunk-gc config
+    public static int PLUGIN_TYPE_TIMEOUT = 600;
+    @Override
+    public long timeout() {
+        return this == PLUGIN ? PLUGIN_TYPE_TIMEOUT : this.timeout;
+    }
+    // Paper end - chunk-gc config
+
     public boolean doesLoad() {
         return this.use == TicketType.TicketUse.LOADING || this.use == TicketType.TicketUse.LOADING_AND_SIMULATION;
     }
@@ -27,7 +40,7 @@ public record TicketType(long timeout, boolean persist, TicketType.TicketUse use
     }
 
     public boolean hasTimeout() {
-        return this.timeout != 0L;
+        return this.timeout() != 0L; // Paper - chunk-gc config
     }
 
     public static enum TicketUse {
