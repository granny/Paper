From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java b/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
index b81a8e57903207344bbdb772f878a76884cc60fc..045cfafb3afe8271d60852ae3c7cdcb039b44d4f 100644
--- a/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
+++ b/net/minecraft/world/entity/ai/navigation/GroundPathNavigation.java
@@ -41,7 +41,7 @@ public class GroundPathNavigation extends PathNavigation {
     }
 
     @Override
-    public Path createPath(BlockPos pos, int accuracy) {
+    public Path createPath(BlockPos pos, @javax.annotation.Nullable Entity entity, int accuracy) { // Paper - EntityPathfindEvent
         LevelChunk chunkNow = this.level.getChunkSource().getChunkNow(SectionPos.blockToSectionCoord(pos.getX()), SectionPos.blockToSectionCoord(pos.getZ()));
         if (chunkNow == null) {
             return null;
@@ -54,7 +54,7 @@ public class GroundPathNavigation extends PathNavigation {
                 }
 
                 if (mutableBlockPos.getY() > this.level.getMinY()) {
-                    return super.createPath(mutableBlockPos.above(), accuracy);
+                    return super.createPath(mutableBlockPos.above(), entity, accuracy); // Paper - EntityPathfindEvent
                 }
 
                 mutableBlockPos.setY(pos.getY() + 1);
@@ -67,7 +67,7 @@ public class GroundPathNavigation extends PathNavigation {
             }
 
             if (!chunkNow.getBlockState(pos).isSolid()) {
-                return super.createPath(pos, accuracy);
+                return super.createPath(pos, entity, accuracy); // Paper - EntityPathfindEvent
             } else {
                 BlockPos.MutableBlockPos mutableBlockPos = pos.mutable().move(Direction.UP);
 
@@ -75,14 +75,14 @@ public class GroundPathNavigation extends PathNavigation {
                     mutableBlockPos.move(Direction.UP);
                 }
 
-                return super.createPath(mutableBlockPos.immutable(), accuracy);
+                return super.createPath(mutableBlockPos.immutable(), entity, accuracy); // Paper - EntityPathfindEvent
             }
         }
     }
 
     @Override
     public Path createPath(Entity entity, int i) {
-        return this.createPath(entity.blockPosition(), i);
+        return this.createPath(entity.blockPosition(), entity, i); // Paper - EntityPathfindEvent
     }
 
     private int getSurfaceY() {
