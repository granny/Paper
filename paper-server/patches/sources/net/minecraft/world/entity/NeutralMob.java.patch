From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/NeutralMob.java b/net/minecraft/world/entity/NeutralMob.java
index 3b5a3ccda1bea11a3d3cffab1464e5f275d46cb7..1d8518afe6e649dce43b8af0d5bc0fb648482341 100644
--- a/net/minecraft/world/entity/NeutralMob.java
+++ b/net/minecraft/world/entity/NeutralMob.java
@@ -35,9 +35,11 @@ public interface NeutralMob {
         if (level instanceof ServerLevel serverLevel) {
             UUID uuid = tag.read("AngryAt", UUIDUtil.CODEC).orElse(null);
             this.setPersistentAngerTarget(uuid);
-            if ((uuid != null ? serverLevel.getEntity(uuid) : null) instanceof LivingEntity livingEntity) {
-                this.setTarget(livingEntity);
-            }
+            // Paper - Prevent entity loading causing async lookups; Moved diff to separate method
+            // If this entity already survived its first tick, e.g. is loaded and ticked in sync, actively
+            // tick the initial persistent anger.
+            // If not, let the first tick on the baseTick call the method later down the line.
+            if (this instanceof Entity entity && !entity.firstTick) this.tickInitialPersistentAnger(level);
         }
     }
 
@@ -90,7 +92,7 @@ public interface NeutralMob {
     default void stopBeingAngry() {
         this.setLastHurtByMob(null);
         this.setPersistentAngerTarget(null);
-        this.setTarget(null);
+        this.setTarget(null, org.bukkit.event.entity.EntityTargetEvent.TargetReason.FORGOT_TARGET); // CraftBukkit
         this.setRemainingPersistentAngerTime(0);
     }
 
@@ -101,8 +103,24 @@ public interface NeutralMob {
 
     void setTarget(@Nullable LivingEntity livingEntity);
 
+    boolean setTarget(@Nullable LivingEntity livingEntity, @Nullable org.bukkit.event.entity.EntityTargetEvent.TargetReason reason); // CraftBukkit
+
     boolean canAttack(LivingEntity entity);
 
     @Nullable
     LivingEntity getTarget();
+
+    // Paper start - Prevent entity loading causing async lookups
+    // Update last hurt when ticking
+    default void tickInitialPersistentAnger(Level level) {
+        UUID uuid = getPersistentAngerTarget();
+        if (uuid == null) {
+            return;
+        }
+
+        if (level.getEntity(uuid) instanceof net.minecraft.world.entity.LivingEntity livingEntity) {
+            this.setTarget(livingEntity, null);
+        }
+    }
+    // Paper end - Prevent entity loading causing async lookups
 }
