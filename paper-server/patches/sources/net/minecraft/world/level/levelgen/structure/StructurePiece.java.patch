From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/level/levelgen/structure/StructurePiece.java b/net/minecraft/world/level/levelgen/structure/StructurePiece.java
index ba86e6954278d6032824a5753eb9552f12cc8dea..5dcc589f35965c4543de0f6e99ccb94dad427216 100644
--- a/net/minecraft/world/level/levelgen/structure/StructurePiece.java
+++ b/net/minecraft/world/level/levelgen/structure/StructurePiece.java
@@ -181,6 +181,11 @@ public abstract class StructurePiece {
                 }
 
                 level.setBlock(worldPos, blockstate, 2);
+                // CraftBukkit start - fluid handling is already done if we have a transformer generator access
+                if (level instanceof org.bukkit.craftbukkit.util.TransformerGeneratorAccess transformerAccess && transformerAccess.canTransformBlocks()) {
+                    return;
+                }
+                // CraftBukkit end
                 FluidState fluidState = level.getFluidState(worldPos);
                 if (!fluidState.isEmpty()) {
                     level.scheduleTick(worldPos, fluidState.getType(), 0);
@@ -193,6 +198,39 @@ public abstract class StructurePiece {
         }
     }
 
+    // CraftBukkit start
+    protected boolean placeCraftBlockEntity(ServerLevelAccessor levelAccessor, BlockPos pos, org.bukkit.craftbukkit.block.state.CraftBlockEntityState<?> craftBlockEntityState, int flags) {
+        if (levelAccessor instanceof org.bukkit.craftbukkit.util.TransformerGeneratorAccess transformerAccess && transformerAccess.canTransformBlocks()) {
+            return transformerAccess.setCraftBlock(pos, craftBlockEntityState, flags);
+        }
+
+        boolean result = levelAccessor.setBlock(pos, craftBlockEntityState.getHandle(), flags);
+        BlockEntity blockEntity = levelAccessor.getBlockEntity(pos);
+        if (blockEntity != null) {
+            blockEntity.loadWithComponents(craftBlockEntityState.getSnapshotNBT(), levelAccessor.registryAccess());
+        }
+        return result;
+    }
+
+    protected void placeCraftSpawner(ServerLevelAccessor levelAccessor, BlockPos pos, org.bukkit.entity.EntityType entityType, int flags) {
+        // This method is used in structures that are generated by code and place spawners as they set the entity after the block was placed making it impossible for plugins to access that information
+        org.bukkit.craftbukkit.block.state.CraftCreatureSpawner spawner = (org.bukkit.craftbukkit.block.state.CraftCreatureSpawner) org.bukkit.craftbukkit.block.state.CraftBlockStates.getBlockState(levelAccessor, pos, Blocks.SPAWNER.defaultBlockState(), null);
+        spawner.setSpawnedType(entityType);
+        this.placeCraftBlockEntity(levelAccessor, pos, spawner, flags);
+    }
+
+    protected void setCraftLootTable(ServerLevelAccessor levelAccessor, BlockPos pos, RandomSource randomSource, ResourceKey<LootTable> lootTable) {
+        // This method is used in structures that use data markers to a loot table to loot containers as otherwise plugins won't have access to that information.
+        net.minecraft.world.level.block.entity.BlockEntity blockEntity = levelAccessor.getBlockEntity(pos);
+        if (blockEntity instanceof net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity lootContainerBlockEntity) {
+            lootContainerBlockEntity.setLootTable(lootTable, randomSource.nextLong());
+            if (levelAccessor instanceof org.bukkit.craftbukkit.util.TransformerGeneratorAccess transformerAccess && transformerAccess.canTransformBlocks()) {
+                transformerAccess.setCraftBlock(pos, org.bukkit.craftbukkit.block.state.CraftBlockStates.getBlockState(levelAccessor, pos, blockEntity.getBlockState(), lootContainerBlockEntity.saveWithFullMetadata(levelAccessor.registryAccess())), 3);
+            }
+        }
+    }
+    // CraftBukkit end
+
     protected boolean canBeReplaced(LevelReader level, int x, int y, int z, BoundingBox box) {
         return true;
     }
@@ -421,11 +459,17 @@ public abstract class StructurePiece {
                 state = reorient(level, pos, Blocks.CHEST.defaultBlockState());
             }
 
-            level.setBlock(pos, state, 2);
-            BlockEntity blockEntity = level.getBlockEntity(pos);
-            if (blockEntity instanceof ChestBlockEntity) {
-                ((ChestBlockEntity)blockEntity).setLootTable(lootTable, random.nextLong());
-            }
+            // CraftBukkit start
+            // level.setBlock(pos, state, 2);
+            // BlockEntity blockEntity = level.getBlockEntity(pos);
+            // if (blockEntity instanceof ChestBlockEntity) {
+            //     ((ChestBlockEntity)blockEntity).setLootTable(lootTable, random.nextLong());
+            // }
+            org.bukkit.craftbukkit.block.state.CraftChest chestState = (org.bukkit.craftbukkit.block.state.CraftChest) org.bukkit.craftbukkit.block.state.CraftBlockStates.getBlockState(level, pos, state, null);
+            chestState.setLootTable(org.bukkit.craftbukkit.CraftLootTable.minecraftToBukkit(lootTable));
+            chestState.setSeed(random.nextLong());
+            this.placeCraftBlockEntity(level, pos, chestState, 2);
+            // CraftBukkit end
 
             return true;
         } else {
@@ -438,11 +482,28 @@ public abstract class StructurePiece {
     ) {
         BlockPos worldPos = this.getWorldPos(x, y, z);
         if (box.isInside(worldPos) && !level.getBlockState(worldPos).is(Blocks.DISPENSER)) {
-            this.placeBlock(level, Blocks.DISPENSER.defaultBlockState().setValue(DispenserBlock.FACING, facing), x, y, z, box);
-            BlockEntity blockEntity = level.getBlockEntity(worldPos);
-            if (blockEntity instanceof DispenserBlockEntity) {
-                ((DispenserBlockEntity)blockEntity).setLootTable(lootTable, random.nextLong());
+            // CraftBukkit start
+            // this.placeBlock(level, Blocks.DISPENSER.defaultBlockState().setValue(DispenserBlock.FACING, facing), x, y, z, box);
+            // BlockEntity blockEntity = level.getBlockEntity(worldPos);
+            // if (blockEntity instanceof DispenserBlockEntity) {
+            //     ((DispenserBlockEntity)blockEntity).setLootTable(lootTable, random.nextLong());
+            // }
+            if (!this.canBeReplaced(level, x, y, z, this.boundingBox)) {
+                return true;
+            }
+            BlockState dispenserBlockState = Blocks.DISPENSER.defaultBlockState().setValue(DispenserBlock.FACING, facing);
+            if (this.mirror != Mirror.NONE) {
+                dispenserBlockState = dispenserBlockState.mirror(this.mirror);
             }
+            if (this.rotation != Rotation.NONE) {
+                dispenserBlockState = dispenserBlockState.rotate(this.rotation);
+            }
+
+            org.bukkit.craftbukkit.block.state.CraftDispenser dispenserState = (org.bukkit.craftbukkit.block.state.CraftDispenser) org.bukkit.craftbukkit.block.state.CraftBlockStates.getBlockState(level, worldPos, dispenserBlockState, null);
+            dispenserState.setLootTable(org.bukkit.craftbukkit.CraftLootTable.minecraftToBukkit(lootTable));
+            dispenserState.setSeed(random.nextLong());
+            this.placeCraftBlockEntity(level, worldPos, dispenserState, 2);
+            // CraftBukkit end
 
             return true;
         } else {
