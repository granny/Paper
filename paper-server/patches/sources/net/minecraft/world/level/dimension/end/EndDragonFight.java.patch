From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/level/dimension/end/EndDragonFight.java b/net/minecraft/world/level/dimension/end/EndDragonFight.java
index aca68551a48dd5d96e3198b71e0185b1ed3a19cf..bb4e387a59c18595f94d48e7f1434cd824221be1 100644
--- a/net/minecraft/world/level/dimension/end/EndDragonFight.java
+++ b/net/minecraft/world/level/dimension/end/EndDragonFight.java
@@ -69,8 +69,9 @@ public class EndDragonFight {
     private static final int GATEWAY_DISTANCE = 96;
     public static final int DRAGON_SPAWN_Y = 128;
     private final Predicate<Entity> validPlayer;
+    private static final Component DEFAULT_BOSS_EVENT_NAME = Component.translatable("entity.minecraft.ender_dragon"); // Paper - reset EnderDragon boss event name
     public final ServerBossEvent dragonEvent = (ServerBossEvent)new ServerBossEvent(
-            Component.translatable("entity.minecraft.ender_dragon"), BossEvent.BossBarColor.PINK, BossEvent.BossBarOverlay.PROGRESS
+            DEFAULT_BOSS_EVENT_NAME, BossEvent.BossBarColor.PINK, BossEvent.BossBarOverlay.PROGRESS // Paper - reset EnderDragon boss event name
         )
         .setPlayBossMusic(true)
         .setCreateWorldFog(true);
@@ -111,7 +112,12 @@ public class EndDragonFight {
         if (data.isRespawning) {
             this.respawnStage = DragonRespawnAnimation.START;
         }
-
+        // Paper start - Add config to disable ender dragon legacy check
+        if (data == EndDragonFight.Data.DEFAULT && !level.paperConfig().entities.spawning.scanForLegacyEnderDragon) {
+            this.needsStateScanning = false;
+            this.dragonKilled = true;
+        }
+        // Paper end - Add config to disable ender dragon legacy check
         this.portalLocation = data.exitPortalLocation.orElse(null);
         this.gateways.addAll(data.gateways.orElseGet(() -> {
             ObjectArrayList<Integer> list = new ObjectArrayList<>(ContiguousSet.create(Range.closedOpen(0, 20), DiscreteDomain.integers()));
@@ -208,9 +214,9 @@ public class EndDragonFight {
             this.dragonUUID = enderDragon.getUUID();
             LOGGER.info("Found that there's a dragon still alive ({})", enderDragon);
             this.dragonKilled = false;
-            if (!hasActiveExitPortal) {
+            if (!hasActiveExitPortal && this.level.paperConfig().entities.behavior.shouldRemoveDragon) { // Paper - Toggle for removing existing dragon
                 LOGGER.info("But we didn't have a portal, let's remove it.");
-                enderDragon.discard();
+                enderDragon.discard(null); // CraftBukkit - add Bukkit remove cause
                 this.dragonUUID = null;
             }
         }
@@ -365,12 +371,22 @@ public class EndDragonFight {
             this.dragonEvent.setVisible(false);
             this.spawnExitPortal(true);
             this.spawnNewGateway();
-            if (!this.previouslyKilled) {
-                this.level
-                    .setBlockAndUpdate(
-                        this.level.getHeightmapPos(Heightmap.Types.MOTION_BLOCKING, EndPodiumFeature.getLocation(this.origin)),
-                        Blocks.DRAGON_EGG.defaultBlockState()
-                    );
+            // Paper start - Add DragonEggFormEvent
+            BlockPos eggPosition = this.level.getHeightmapPos(Heightmap.Types.MOTION_BLOCKING, EndPodiumFeature.getLocation(this.origin));
+            org.bukkit.craftbukkit.block.state.CraftBlockState eggState = org.bukkit.craftbukkit.block.state.CraftBlockStates.getBlockState(this.level, eggPosition);
+            eggState.setData(Blocks.DRAGON_EGG.defaultBlockState());
+            io.papermc.paper.event.block.DragonEggFormEvent eggEvent = new io.papermc.paper.event.block.DragonEggFormEvent(org.bukkit.craftbukkit.block.CraftBlock.at(this.level, eggPosition), eggState,
+                new org.bukkit.craftbukkit.boss.CraftDragonBattle(this));
+            // Paper end - Add DragonEggFormEvent
+            if (this.level.paperConfig().entities.behavior.enderDragonsDeathAlwaysPlacesDragonEgg || !this.previouslyKilled) { // Paper - Add toggle for always placing the dragon egg
+                // Paper start - Add DragonEggFormEvent
+                // this.level.setBlockAndUpdate(this.level.getHeightmapPos(Heightmap.Types.MOTION_BLOCKING, EndPodiumFeature.getLocation(this.origin)), Blocks.DRAGON_EGG.defaultBlockState());
+            } else {
+                eggEvent.setCancelled(true);
+            }
+            if (eggEvent.callEvent()) {
+                ((org.bukkit.craftbukkit.block.state.CraftBlockState) eggEvent.getNewState()).place(3);
+                // Paper end - Add DragonEggFormEvent
             }
 
             this.previouslyKilled = true;
@@ -384,6 +400,24 @@ public class EndDragonFight {
         this.gateways.clear();
     }
 
+    // Paper start - More DragonBattle API
+    public boolean spawnNewGatewayIfPossible() {
+        if (!this.gateways.isEmpty()) {
+            this.spawnNewGateway();
+            return true;
+        }
+        return false;
+    }
+
+    public List<EndCrystal> getSpikeCrystals() {
+        final List<EndCrystal> endCrystals = new java.util.ArrayList<>();
+        for (final SpikeFeature.EndSpike spike : SpikeFeature.getSpikesForLevel(this.level)) {
+            endCrystals.addAll(this.level.getEntitiesOfClass(EndCrystal.class, spike.getTopBoundingBox()));
+        }
+        return endCrystals;
+    }
+    // Paper end - More DragonBattle API
+
     private void spawnNewGateway() {
         if (!this.gateways.isEmpty()) {
             int i = this.gateways.remove(this.gateways.size() - 1);
@@ -414,6 +448,11 @@ public class EndDragonFight {
             this.portalLocation = this.portalLocation.atY(Math.max(this.level.getMinY() + 1, this.portalLocation.getY()));
         }
 
+        // Paper start - Prevent "softlocked" exit portal generation
+        if (this.portalLocation.getY() <= this.level.getMinY()) {
+            this.portalLocation = this.portalLocation.atY(this.level.getMinY() + 1);
+        }
+        // Paper end - Prevent "softlocked" exit portal generation
         if (endPodiumFeature.place(
             FeatureConfiguration.NONE, this.level, this.level.getChunkSource().getGenerator(), RandomSource.create(), this.portalLocation
         )) {
@@ -433,6 +472,7 @@ public class EndDragonFight {
             enderDragon.snapTo(this.origin.getX(), 128 + this.origin.getY(), this.origin.getZ(), this.level.random.nextFloat() * 360.0F, 0.0F);
             this.level.addFreshEntity(enderDragon);
             this.dragonUUID = enderDragon.getUUID();
+            this.resetSpikeCrystals(); // Paper - Reset ender crystals on dragon spawn
         }
 
         return enderDragon;
@@ -444,6 +484,10 @@ public class EndDragonFight {
             this.ticksSinceDragonSeen = 0;
             if (dragon.hasCustomName()) {
                 this.dragonEvent.setName(dragon.getDisplayName());
+                // Paper start - ensure reset EnderDragon boss event name
+            } else {
+                this.dragonEvent.setName(DEFAULT_BOSS_EVENT_NAME);
+                // Paper end - ensure reset EnderDragon boss event name
             }
         }
     }
@@ -471,7 +515,13 @@ public class EndDragonFight {
         return this.previouslyKilled;
     }
 
-    public void tryRespawn() {
+    public boolean tryRespawn() { // CraftBukkit - return boolean
+        // Paper start - Perf: Do crystal-portal proximity check before entity lookup
+        return this.tryRespawn(null);
+    }
+
+    public boolean tryRespawn(@Nullable BlockPos placedEndCrystalPos) { // placedEndCrystalPos is null if the tryRespawn() call was not caused by a placed end crystal
+        // Paper end - Perf: Do crystal-portal proximity check before entity lookup
         if (this.dragonKilled && this.respawnStage == null) {
             BlockPos blockPos = this.portalLocation;
             if (blockPos == null) {
@@ -486,6 +536,22 @@ public class EndDragonFight {
 
                 blockPos = this.portalLocation;
             }
+            // Paper start - Perf: Do crystal-portal proximity check before entity lookup
+            if (placedEndCrystalPos != null) {
+                // The end crystal must be 0 or 1 higher than the portal origin
+                int dy = placedEndCrystalPos.getY() - blockPos.getY();
+                if (dy != 0 && dy != 1) {
+                    return false;
+                }
+                // The end crystal must be within a distance of 1 in one planar direction, and 3 in the other
+                int dx = placedEndCrystalPos.getX() - blockPos.getX();
+                int dz = placedEndCrystalPos.getZ() - blockPos.getZ();
+                if (!((dx >= -1 && dx <= 1 && dz >= -3 && dz <= 3) || (dx >= -3 && dx <= 3 && dz >= -1 && dz <= 1))) {
+                    return false;
+                }
+            }
+            // Paper end - Perf: Do crystal-portal proximity check before entity lookup
+
 
             List<EndCrystal> list = Lists.newArrayList();
             BlockPos blockPos1 = blockPos.above(1);
@@ -493,18 +559,19 @@ public class EndDragonFight {
             for (Direction direction : Direction.Plane.HORIZONTAL) {
                 List<EndCrystal> entitiesOfClass = this.level.getEntitiesOfClass(EndCrystal.class, new AABB(blockPos1.relative(direction, 2)));
                 if (entitiesOfClass.isEmpty()) {
-                    return;
+                    return false; // CraftBukkit - return value
                 }
 
                 list.addAll(entitiesOfClass);
             }
 
             LOGGER.debug("Found all crystals, respawning dragon.");
-            this.respawnDragon(list);
+            return this.respawnDragon(list); // CraftBukkit - return value
         }
+        return false; // CraftBukkit - return value
     }
 
-    public void respawnDragon(List<EndCrystal> crystals) {
+    public boolean respawnDragon(List<EndCrystal> crystals) { // CraftBukkit - return boolean
         if (this.dragonKilled && this.respawnStage == null) {
             for (BlockPattern.BlockPatternMatch blockPatternMatch = this.findExitPortal(); blockPatternMatch != null; blockPatternMatch = this.findExitPortal()) {
                 for (int i = 0; i < this.exitPortalPattern.getWidth(); i++) {
@@ -523,7 +590,9 @@ public class EndDragonFight {
             this.respawnTime = 0;
             this.spawnExitPortal(false);
             this.respawnCrystals = crystals;
+            return true; // CraftBukkit - return value
         }
+        return false; // CraftBukkit - return value
     }
 
     public void resetSpikeCrystals() {
