From 8970c8040a87bb9da1d22cabfd5dafb79924ed1f Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 06:37:42 -0700
Subject: [PATCH] paper File Patches


diff --git a/com/mojang/brigadier/suggestion/Suggestion.java b/com/mojang/brigadier/suggestion/Suggestion.java
index 68536e72787b526a9bdae0fc93aa52b3c673ad92..2a3df268e1e17558c79def99e6277a342ee1b95f 100644
--- a/com/mojang/brigadier/suggestion/Suggestion.java
+++ b/com/mojang/brigadier/suggestion/Suggestion.java
@@ -76,13 +76,27 @@ public class Suggestion implements Comparable<Suggestion> {
             '}';
     }
 
+    // Paper start - fix unstable Suggestion comparison
+    private static int compare0(final Suggestion lhs, final Suggestion rhs, final java.util.Comparator<String> textComparator) {
+        if (lhs instanceof final IntegerSuggestion lis && rhs instanceof final IntegerSuggestion ris) {
+            return Integer.compare(lis.getValue(), ris.getValue());
+        } else if (lhs instanceof IntegerSuggestion) {
+            return -1;
+        } else if (rhs instanceof IntegerSuggestion) {
+            return 1;
+        } else {
+            return textComparator.compare(lhs.text, rhs.text);
+        }
+    }
+    // Paper end - fix unstable Suggestion comparison
+
     @Override
     public int compareTo(final Suggestion o) {
-        return text.compareTo(o.text);
+        return compare0(this, o, java.util.Comparator.naturalOrder()); // Paper - fix unstable Suggestion comparison
     }
 
     public int compareToIgnoreCase(final Suggestion b) {
-        return text.compareToIgnoreCase(b.text);
+        return compare0(this, b, String.CASE_INSENSITIVE_ORDER); // Paper - fix unstable Suggestion comparison
     }
 
     public Suggestion expand(final String command, final StringRange range) {
